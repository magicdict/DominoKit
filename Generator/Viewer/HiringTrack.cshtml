@model HiringTrack
@{
if (Model.Code == ConstHelper.NewRecordCode)
{
ViewBag.Title = "创建" + HiringTrack.MvcTitle;
}
else
{
ViewBag.Title = "编辑" + HiringTrack.MvcTitle;
}
Layout = "~/Views/Shared/_DashBoardForMin.cshtml";
}
@using (Html.BeginForm())
{
@Html.AntiForgeryToken()
<div class="form-horizontal">
<div class="form-group">
@Html.LabelFor(model => model.TalentCode, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.TalentCode, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.TalentCode, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.PositionCode, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.PositionCode, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.PositionCode, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.ScreenDate, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@HtmlUIHelper.GetDatePicker("ScreenDate", Model.ScreenDate)
@Html.ValidationMessageFor(model => model.ScreenDate, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.InterviewList, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.InterviewList, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.InterviewList, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.FinalStatus, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.FinalStatus, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.FinalStatus, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.OfferDate, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@HtmlUIHelper.GetDatePicker("OfferDate", Model.OfferDate)
@Html.ValidationMessageFor(model => model.OfferDate, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.OnBoardDate, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@HtmlUIHelper.GetDatePicker("OnBoardDate", Model.OnBoardDate)
@Html.ValidationMessageFor(model => model.OnBoardDate, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.RefuseReason, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.RefuseReason, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.RefuseReason, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.IsClosed, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@HtmlUIHelper.GetMVCCheckBox("","IsClosed", Model.IsClosed)
@Html.ValidationMessageFor(model => model.IsClosed, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.Channel, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.Channel, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.Channel, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
<div class="col-md-offset-2 col-md-10">
 @if (Model.Code == ConstHelper.NewRecordCode)
{
<input type="submit" value="创建" class="btn btn-success" style="width:120px"/>
}
else
{
<input type="submit" value="保存" class="btn btn-success" style="width:120px" />
}
@Html.ActionLink("返回列表", "Index", new { }, new { @class = "btn btn-default", style = "width:120px" })
</div>
</div>
</div>
}
