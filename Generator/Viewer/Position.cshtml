@model Position
@{
if (Model.Code == ConstHelper.NewRecordCode)
{
ViewBag.Title = "创建" + Position.MvcTitle;
}
else
{
ViewBag.Title = "编辑" + Position.MvcTitle;
}
Layout = "~/Views/Shared/_DashBoardForMin.cshtml";
}
@using (Html.BeginForm())
{
@Html.AntiForgeryToken()
<div class="form-horizontal">
<div class="form-group">
@Html.LabelFor(model => model.DepartmentCode, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@(HtmlUIHelper.GetSingleValueUI<M_EmployeeDepartment>("DepartmentCode", ViewBag.EmployeeDepartmentList, Model.DepartmentCode))
@Html.ValidationMessageFor(model => model.DepartmentCode, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.Name, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.EmploymentType, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@(HtmlUIHelper.GetSingleValueUI<M_EmploymentType>("EmploymentType", ViewBag.EmploymentTypeList, Model.EmploymentType))
@Html.ValidationMessageFor(model => model.EmploymentType, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.Target, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.Target, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.Target, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.Location, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@(HtmlUIHelper.GetSingleValueUI<M_WorkSite>("Location", ViewBag.WorkSiteList, Model.Location))
@Html.ValidationMessageFor(model => model.Location, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.JodDetails, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.JodDetails, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.JodDetails, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.SkillCatalogCode, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@(HtmlUIHelper.GetSingleValueUI<M_SkillCatalog>("SkillCatalogCode", ViewBag.SkillCatalogList, Model.SkillCatalogCode))
@Html.ValidationMessageFor(model => model.SkillCatalogCode, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.IndustryBackgroundCode, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@(HtmlUIHelper.GetSingleValueUI<M_IndustryBackground>("IndustryBackgroundCode", ViewBag.IndustryBackgroundList, Model.IndustryBackgroundCode))
@Html.ValidationMessageFor(model => model.IndustryBackgroundCode, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.OpenDate, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@HtmlUIHelper.GetDatePicker("OpenDate", Model.OpenDate)
@Html.ValidationMessageFor(model => model.OpenDate, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.WWApprovedDate, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@HtmlUIHelper.GetDatePicker("WWApprovedDate", Model.WWApprovedDate)
@Html.ValidationMessageFor(model => model.WWApprovedDate, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.EmployeeLevelList, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@(HtmlUIHelper.GetMultiValueUI<M_EmployeeLevel>("EmployeeLevelList", ViewBag.EmployeeLevelList, Model.EmployeeLevelList))
@Html.ValidationMessageFor(model => model.EmployeeLevelList, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.InterviewList, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@(HtmlUIHelper.GetMultiValueUI<M_InterviewType>("InterviewList", ViewBag.InterviewTypeList, Model.InterviewList))
@Html.ValidationMessageFor(model => model.InterviewList, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.Priority, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.Priority, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.FinalStatus, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@(HtmlUIHelper.GetSingleValueUI<M_PositionStatus>("FinalStatus", ViewBag.PositionStatusList, Model.FinalStatus))
@Html.ValidationMessageFor(model => model.FinalStatus, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.Comment, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.Comment, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
<div class="col-md-offset-2 col-md-10">
 @if (Model.Code == ConstHelper.NewRecordCode)
{
<input type="submit" value="创建" class="btn btn-success" style="width:120px"/>
}
else
{
<input type="submit" value="保存" class="btn btn-success" style="width:120px" />
}
@Html.ActionLink("返回列表", "Index", new { }, new { @class = "btn btn-default", style = "width:120px" })
</div>
</div>
</div>
}
