@model TalentInfo
@{
if (Model.Code == ConstHelper.NewRecordCode)
{
ViewBag.Title = "创建" + TalentInfo.MvcTitle;
}
else
{
ViewBag.Title = "编辑" + TalentInfo.MvcTitle;
}
Layout = "~/Views/Shared/_DashBoardForMin.cshtml";
}
@using (Html.BeginForm())
{
@Html.AntiForgeryToken()
<div class="form-horizontal">
<div class="form-group">
@Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.Name, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.EnglishName, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.EnglishName, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.EnglishName, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.BirthDay, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@HtmlUIHelper.GetDatePicker("BirthDay", Model.BirthDay)
@Html.ValidationMessageFor(model => model.BirthDay, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.BornIn, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.BornIn, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.BornIn, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.Location, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.Location, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.Mobile, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.Mobile, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.Email, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.University, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.University, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.University, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.Major, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.Major, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.Major, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.Academic, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.Academic, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.Academic, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.OverseaWork, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@HtmlUIHelper.GetMVCCheckBox("","OverseaWork", Model.OverseaWork)
@Html.ValidationMessageFor(model => model.OverseaWork, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.OverseaEdu, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@HtmlUIHelper.GetMVCCheckBox("","OverseaEdu", Model.OverseaEdu)
@Html.ValidationMessageFor(model => model.OverseaEdu, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.IndustryBackgroundList, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@(HtmlUIHelper.GetMultiValueUI<M_IndustryBackground>("IndustryBackgroundList", ViewBag.IndustryBackgroundList, Model.IndustryBackgroundList))
@Html.ValidationMessageFor(model => model.IndustryBackgroundList, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.PreEmp, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.PreEmp, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.PreEmp, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.PerInd, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.PerInd, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.PerInd, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.Channel, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@(HtmlUIHelper.GetSingleValueUI<M_Channel>("Channel", ViewBag.ChannelList, Model.Channel))
@Html.ValidationMessageFor(model => model.Channel, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.LanguageList, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@HtmlUIHelper.GetMultiValueWithGradeUI("LanguageList", ViewBag.LanguageList, Model.LanguageList)
@Html.ValidationMessageFor(model => model.LanguageList, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.SkillList, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.SkillList, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.SkillList, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.TalentRank, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.TalentRank, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.TalentRank, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.Evaluate, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.Evaluate, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.Evaluate, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.Comment, new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.Comment, new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
<div class="col-md-offset-2 col-md-10">
 @if (Model.Code == ConstHelper.NewRecordCode)
{
<input type="submit" value="创建" class="btn btn-success" style="width:120px"/>
}
else
{
<input type="submit" value="保存" class="btn btn-success" style="width:120px" />
}
@Html.ActionLink("返回列表", "Index", new { }, new { @class = "btn btn-default", style = "width:120px" })
</div>
</div>
</div>
}
